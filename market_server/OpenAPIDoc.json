{
    "swagger": "2.0",
    "info": {
        "title": "Auto market API",
        "description": "A simple API help with the exchange and sale of vehicle",
        "version": "v1"
    },
    "host": "127.0.0.1:8000",
    "schemes": [
        "http"
    ],
    "basePath": "/api",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "Basic": []
        }
    ],
    "paths": {
        "/get_base_address/{cep}/": {
            "get": {
                "operationId": "get_base_address_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "get_base_address"
                ]
            },
            "parameters": [
                {
                    "name": "cep",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/user": {
            "get": {
                "operationId": "user_list",
                "description": "",
                "parameters": [
                    {
                        "name": "address_state",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address_city",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "post": {
                "operationId": "user_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "parameters": []
        },
        "/user_delete/{id}": {
            "delete": {
                "operationId": "user_delete_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "user_delete"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user_details/{id}": {
            "get": {
                "operationId": "user_details_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "produces": [
                    "application/json",
                    "application/xml",
                    "application/x-google-protobuf"
                ],
                "tags": [
                    "user_details"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user_update/{id}": {
            "put": {
                "operationId": "user_update_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "user_update"
                ]
            },
            "patch": {
                "operationId": "user_update_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "user_update"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "User": {
            "required": [
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "date_joined": {
                    "title": "Date joined",
                    "type": "string",
                    "format": "date-time"
                },
                "address_cep": {
                    "title": "Address cep",
                    "type": "integer"
                },
                "address_state": {
                    "title": "Address state",
                    "type": "string",
                    "maxLength": 150
                },
                "address_city": {
                    "title": "Address city",
                    "type": "string",
                    "maxLength": 150
                },
                "address_neighborhood": {
                    "title": "Address neighborhood",
                    "type": "string",
                    "maxLength": 150
                },
                "address_street": {
                    "title": "Address street",
                    "type": "string",
                    "maxLength": 150
                },
                "address_number": {
                    "title": "Address number",
                    "type": "integer"
                },
                "address_complement": {
                    "title": "Address complement",
                    "type": "string",
                    "maxLength": 150
                }
            }
        }
    }
}